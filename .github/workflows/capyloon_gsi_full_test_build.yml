name: capyloon-gsi-ci
on: 
  repository_dispatch:
      types: 
      - capyloon_gsi_b2g_repack
      - capyloon_gsi_aosp_build
      # - capyloon_gsi_gecko_build
      - capyloon_gsi_b2g_build
      - capyloon_gsi_api_daemon_build
      
env:
  RCLONE: ${{secrets.RCLONE}}
  GIT_ACCESS_TOKEN: ${{secrets.GIT_ACCESS_TOKEN}}
  gecko_version:  ${{github.event.client_payload.gecko_version}} 
  device_name: ${{github.event.client_payload.device_name}} 
  device_arch: ${{github.event.client_payload.device_arch}} 
  build_device_tag: ${{github.event.client_payload.build_device_tag}}
  repo_dispatches: ${{github.event.client_payload.repo_dispatches}}
  b2g_source: ${{github.event.client_payload.b2g_source}}
  b2g_branch: ${{github.event.client_payload.b2g_branch}}


  systemimage: system.img.xz
  outimage: out
  out_path: /Volumes/out/B2G
  
  image: b2g_gsi
  sourceimage: b2g_gsi
  work: /Volumes/b2g_gsi
  out_work: /Volumes/out
  remotepath: b2g_gsi_${{github.event.client_payload.device_name}}
  actions_branch: ${{github.event.client_payload.actions_branch}}
  

jobs: 
  repack_aosp:        
    if: github.event.action == 'capyloon_gsi_b2g_repack'
    runs-on: macos-10.15
    timeout-minutes: 360
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        ref: ${{ env.actions_branch }}

    - name: Clean system environment
      continue-on-error: true
      run: |
        ./common/init/all_unmount_darwin.sh
            
    - name: Initialization system environment
      run: |
        ./common/init/clean_space_darwin.sh
        ./common/init/env_darwin.sh
        ./common/source/create_sparseimage.sh
           
    - name: Fetch source
      run: |    
        ./gsi/source/repo_source.sh
        
    - name: Fix source
      continue-on-error: true
      run: |    
        echo Fix source 
        ./common/source/fix_soucre.sh
        ./gsi/source/fix_soucre.sh
                  
    # upload sparseimage to gdrive
    - name: Upload Source 
      run: |
        ./common/init/all_unmount_darwin.sh
        ./common/source/compress_sourceimage.sh     
        ./common/source/upload_image.sh
        
    - name: Start build job          
      run: |
        ./gsi/init/webhook.sh capyloon_gsi_aosp_build

  aosp_build:
    if: github.event.action == 'capyloon_gsi_aosp_build' || github.event.action == 'capyloon_gsi_b2g_build' 
    runs-on: macos-10.15
    timeout-minutes: 360
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        ref: ${{ env.actions_branch }}
  
    # - uses: actions/checkout@v2
    # - name: Setup tmate session
    #   uses: mxschmitt/action-tmate@v3


    - name: bootstrap_gecko
      run: |
        # brew install mercurial
        # ./common/build/bootstrap_gecko.sh
        # ./common/source/download_kaios_ndk.sh
        git clone https://github.com/mozilla/gecko-dev --depth=1
        cd ./gecko-dev
        export MOZBUILD_STATE_PATH=~/.mozbuild
        ./mach  --no-interactive bootstrap --application-choice=mobile_android

    - name: Initialization system environment
      run: |
        ./common/init/all_unmount_darwin.sh
        ./common/init/clean_space_darwin.sh
        ./common/init/env_darwin.sh
        ./common/source/download_source_from_gdrive.sh
        df -h
        
    - uses: hecrj/setup-rust-action@v1
      with:
        rust-version: stable
    - uses: actions/checkout@master
    - name: Install sccache
      run: cargo install sccache
        
    - name: Env
      run: |         
         brew install cpanm 
         sudo cpan LWP::UserAgent
        #  ./common/source/download_kaios_ndk.sh

    - name: Check The Previous “error.log”
      run: |
        if [ -d "${work}/B2G/out/error.log" ];then
          ls ${work}/out
        fi
        if [ -d "${work}/B2G/out/error.log" ];then
          ls -al ${work}/B2G/out/error*
          echo "old error.log:"
          cat ${work}/B2G/out/error.log
          sudo rm ${work}/B2G/out/error.log
          touch ${work}/B2G/out/error.log
        fi
        
    - name: Build
      if: github.event.action == 'capyloon_gsi_aosp_build'
      continue-on-error: true
      id: build
      run: |
        df -h
        chmod +x ./gsi/full/build.sh
        ./gsi/full/build.sh
        

    # - name: B2G Build - Build Source include Gecko
    #   if: github.event.action == 'gsi_b2g_build'
    #   run: |
    #     df -h
    #     ./common/build/add_pre_api_daemon.sh
    #     #### build          
    #     ./gsi/build/build_with_gecko.sh


    - name: Check Current ”error.log“ Status
      id: check
      run: |
        if [ -s ${work}/B2G/out/error.log ]; then
          echo Error!
          cat ${work}/B2G/out/error.log
          ./common/init/all_unmount_darwin.sh
          exit 2
        else
          exit 0
        fi
         
    # - name: Repack b2g-sysroot and api-sysroot
    #   id: sysroot
    #   if: github.event.action == 'capyloon_gsi_aosp_build' && steps.check.conclusion == 'success' &&  steps.build.outcome == 'success' && steps.build.conclusion == 'success'
    #   run: |
    #     cp ./common/build/create-b2g-sysroot.sh ${work}/B2G
    #     cp ./common/build/create-api_sysroot.sh ${work}/B2G
    #     pip3 install zstandard
    #     pip install zstandard
        
    #     echo repack_b2g-sysroot
    #     ./common/build/repack_b2g-sysroot.sh
    #     echo repack_api-sysroot
    #     ./common/build/repack_api-sysroot.sh
    #     echo Upload b2g-sysroot and api-sysroot
    #     ./common/source/upload_sysroot.sh
        
    - name: Updoal systemimage
      if:  github.event.action == 'capyloon_gsi_b2g_build' 
      continue-on-error: true
      run: |
         ./common/source/upload_systemimage.sh
        
    - name: Clean system environment
      continue-on-error: true
      run: |
        ./common/init/all_unmount_darwin.sh
        
    - name: Send "build_gecko" WebHook
      if: github.event.action == 'capyloon_gsi_aosp_build' && steps.check.conclusion == 'success' &&  steps.build.outcome == 'success' && steps.build.conclusion == 'success'
      run: |
        ./gsi/init/webhook.sh capyloon_gsi_gecko_build

    - name: Update Build Source
      if: steps.check.conclusion == 'success' &&  github.event.action == 'capyloon_gsi_aosp_build' 
      run: |
        ./common/source/upload_out_image.sh
            
    - name: Send "aosp_build" WebHook Again
      if: github.event.action == 'capyloon_gsi_aosp_build' && steps.build.outcome == 'failure' && steps.build.conclusion == 'success'  &&  steps.check.conclusion == 'success'         
      run: |
        ./gsi/init/webhook.sh capyloon_gsi_aosp_build

#   gecko_build:
#     if: github.event.action == 'capyloon_gsi_gecko_build' || github.event_name == 'schedule' 
#     runs-on: ubuntu-18.04
#     timeout-minutes: 360
#     steps:
#     - name: Checkout
#       uses: actions/checkout@v2
#       with:
#         ref: ${{ env.actions_branch }}
        
#     - name: Initialization system environment
#       run: |
#           ./common/init/env_linux.sh
        
#     - name: clean disk
#       run: |
#          ./common/init/clean_space_linux.sh
        
#     - uses: hecrj/setup-rust-action@v1
#       with:
#         rust-version: stable
#     - uses: actions/checkout@master
#     - name: Install sccache
#       run: cargo install sccache

#     - name: Fetch Source
#       run: |
#         df -h
#         cd ~
#         git clone https://github.com/kaiostech/gecko-b2g -b gonk --depth=1
#         df -h
        
# #     - uses: actions/checkout@v2
# #     - name: Setup tmate session
# #       uses: mxschmitt/action-tmate@v3
        
#     - name: Bootstrap Gecko
#       run: |
#         df -h
#         ./common/build/bootstrap_gecko.sh
#         ./common/source/download_kaios_ndk.sh
#         rustup target add aarch64-linux-android armv7-linux-androideabi thumbv7neon-linux-androideabi
       
#     - name: Build Gecko
#       run: |
#         cp ./common/build/build-gecko-srcipt.sh ~/gecko-b2g
#         ./common/build/build_gecko.sh
      
#     - name: Get Gecko Version
#       run: |
#         cd ~/gecko-b2g
#         echo `cat browser/config/version.txt`
#         export version=`cat browser/config/version.txt`
        
#         if [ "$device_arch" == "aarch64-linux-android" ]; then
#           TARGET_ARCH=aarch64
#           ARCH_ABI="android"
#         else
#           TARGET_ARCH=arm
#           ARCH_ABI="androideabi"
#         fi
#         echo "gecko_version=b2g-${version}.en-US.linux-${ARCH_ABI}-${TARGET_ARCH}.tar.bz2" >> $GITHUB_ENV


#     - name: Upload Artifact
#       uses: actions/upload-artifact@master
#       with:
#         name: ${{ env.gecko_version }}
#         path: ~/objdir-gecko/dist/${{ env.gecko_version }}

#     - name: Upload to Gdrive
#       run: |
#         df -h
#         cd ~/objdir-gecko/dist
#         rclone copy ${{ env.gecko_version }} itd:ci/${remotepath}
#         df -h
        
#     - name: Send "b2g_api_daemon_build" WebHook
#       run: |
#         ./gsi/init/webhook.sh  gsi_api_daemon_build

  # api-daemon_build:
  #   if: github.event.action == 'gsi_api_daemon_build'
  #   runs-on: ubuntu-18.04
  #   timeout-minutes: 360
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v2
  #     with:
  #       ref: ${{ env.actions_branch }}

  #   - name: Initialization system environment
  #     run: |
  #       df -h
  #       ./common/init/env_linux.sh
        
  #   - name: Download Source
  #     run: |
  #       ./common/source/download_kaios_ndk.sh
  #       cd ~
  #       ####
  #       rustup target add aarch64-linux-android armv7-linux-androideabi
  #       rclone copy  itd:ci/${remotepath}/api-sysroot.tar.zst ./
  #       mkdir ~/.mozbuild/api-sysroot
  #       tar -C "$HOME/.mozbuild/api-sysroot" -I zstd -x -a -f api-sysroot.tar.zst
  #       ls ~/.mozbuild/api-sysroot/out
  #       cd ~
  #       git clone https://github.com/kaiostech/api-daemon 
  #       ls -al
        
  #   - name: build Source
  #     run: |
  #       ####
  #       export TARGET_ARCH=${device_arch}
  #       export BUILD_WITH_NDK_DIR=~/.mozbuild/android-ndk-r20b-canary
  #       export GONK_DIR=~/.mozbuild/api-sysroot
  #       export GONK_PRODUCT=${device_name}
  #       cd ~/api-daemon
  #       ./update-prebuilts.sh
        
  #   - name: zip Artifact
  #     run: |
  #       cd ~
  #       zip -r ~/prebuilts.zip ~/api-daemon/prebuilts 
  #       rclone copy ~/prebuilts.zip itd:ci/${remotepath} 
  #       ls -al -h
        
  #   - name: Upload Artifact
  #     continue-on-error: true
  #     uses: actions/upload-artifact@master
  #     with:
  #       name: prebuilts.zip
  #       path: ~/prebuilts.zip

  #   - name: Send Done Notify && Send "b2g_build" WebHook
  #     run: |
  #       ./gsi/init/webhook.sh gsi_b2g_build
